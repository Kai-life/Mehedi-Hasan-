#__________________| INFO |___________________#
#______SCRIPT ENCRYPTED BY PYTHON 3.0
#______CODING BY: ASHEKUR RAHAMAN
#______GITHUB : https://github.com/RX-ASHIK?tab=repositories
#________________| SCRIPT DATA |_____________#

import base64
exec(base64.b64decode(b'I+KUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgFsgSU1QT1JUIFNZU1RFTSBd4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSAIw0KIA0KaW1wb3J0IHJlcXVlc3RzLGJzNCxqc29uLG9zLHN5cyxyYW5kb20sZGF0ZXRpbWUsdGltZSxyZQ0KaW1wb3J0IHVybGxpYjMscmljaCxiYXNlNjQNCmZyb20gcmljaC50YWJsZSBpbXBvcnQgVGFibGUgYXMgbWUNCmZyb20gcmljaC5jb25zb2xlIGltcG9ydCBDb25zb2xlIGFzIHNvbA0KZnJvbSBiczQgaW1wb3J0IEJlYXV0aWZ1bFNvdXAgYXMgc29wDQpmcm9tIGNvbmN1cnJlbnQuZnV0dXJlcyBpbXBvcnQgVGhyZWFkUG9vbEV4ZWN1dG9yIGFzIHRyZWQNCmZyb20gcmljaC5jb25zb2xlIGltcG9ydCBHcm91cCBhcyBncA0KZnJvbSByaWNoLnBhbmVsIGltcG9ydCBQYW5lbCBhcyBuZWwNCmZyb20gcmljaC5tYXJrZG93biBpbXBvcnQgTWFya2Rvd24gYXMgbWFyaw0KZnJvbSByaWNoLmNvbHVtbnMgaW1wb3J0IENvbHVtbnMgYXMgY29sDQpmcm9tIHJpY2ggaW1wb3J0IHByZXR0eQ0KZnJvbSByaWNoLnRleHQgaW1wb3J0IFRleHQgYXMgdGVreg0KZnJvbSB0aW1lIGltcG9ydCBsb2NhbHRpbWUgYXMgbHQNCnByZXR0eS5pbnN0YWxsKCkNCkNPTj1zb2woKQ0KI+KUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgFsgQVNJRi1JTlNUQUxMIF3ilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIAjDQppbXBvcnQgb3MsIHBsYXRmb3JtLCB0aW1lLCBzeXMNCnByaW50KCdcMDMzWzk1OzFtW1x4MWJbMzg7NTs1MG0rXDAzM1s5NTsxbV0gXHgxYlszODs1OzUwbSBXZWxjb21lIHRvIEFTSUYgS2luZyB0b29sICcpDQpvcy5zeXN0ZW0oImVzcGVhayAtYSAzMDAgXCJXZWxjb21lIHRvLEFTSUYgS2luZyB0b29sLFwiIikNCnRpbWUuc2xlZXAoMikNCiPilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIBbIEFTSUYtRU5EIF3ilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIAjDQoj4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSAWyBVU0VSIEFHRU5UIF3ilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIAjDQp1YSA9IFsiTW96aWxsYS81LjAgKGlQaG9uZTE0LDY7IFU7IENQVSBpUGhvbmUgT1MgMTVfNCBsaWtlIE1hYyBPUyBYKSBBcHBsZVdlYktpdC82MDIuMS41MCAoS0hUTUwsIGxpa2UgR2Vja28pIFZlcnNpb24vMTAuMCBNb2JpbGUvMTlFMjQxIFNhZmFyaS82MDIuMSIsXQ0KdWEgPSBbIk1vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCAxMDsgU00tRzk3MEYpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMjEuMC42MTY3LjEwMSBNb2JpbGUgU2FmYXJpLzUzNy4zNiIsXQ0KdWEgPSBbIk1vemlsbGEvNS4wIChpUGhvbmUxNCwzOyBVOyBDUFUgaVBob25lIE9TIDE1XzAgbGlrZSBNYWMgT1MgWCkgQXBwbGVXZWJLaXQvNjAyLjEuNTAgKEtIVE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uLzEwLjAgTW9iaWxlLzE5QTM0NiBTYWZhcmkvNjAyLjEiLF0NCnVhID0gWyJNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgMTI7IFNNLUc5NzNVKSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTEyLjAuMC4wIE1vYmlsZSBTYWZhcmkvNTM3LjM2IixdDQp1YSA9IFsiTW96aWxsYS81LjAgKGlQaG9uZTsgQ1BVIGlQaG9uZSBPUyAxN18yIGxpa2UgTWFjIE9TIFgpIEFwcGxlV2ViS2l0LzYwNS4xLjE1IChLSFRNTCwgbGlrZSBHZWNrbykgR1NBLzMwMC4wLjU5ODk5NDIwNSBNb2JpbGUvMTVFMTQ4IFNhZmFyaS82MDQuMSIsXQ0KdWEgPSBbIk1vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCAxMDsgSykgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzExMi4wLjAuMCBNb2JpbGUgU2FmYXJpLzUzNy4zNiIsXQ0KdWEgPSBbIk1vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCAxMDsgWUFMLUwyMTsgSE1TQ29yZSA2LjEzLjAuMzAyOyBHTVNDb3JlIDI0LjAyLjEzKSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvOTkuMC40ODQ0Ljg4IEh1YXdlaUJyb3dzZXIvMTQuMC4yLjMxMSBNb2JpbGUgU2FmYXJpLzUzNy4zNiIsXQ0KdWEgPSBbIk1vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCAxMTsgbW90byBlMjAgQnVpbGQvUk9OUzMxLjI2Ny05NC0xNCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzEyMC4wLjYwOTkuMjMwIE1vYmlsZSBTYWZhcmkvNTM3LjM2IixdDQp1YSA9IFsiTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkIDEzOyBTQU1TVU5HIFNNLUc3ODFCKSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBTYW1zdW5nQnJvd3Nlci8yMy4wIENocm9tZS8xMTUuMC4wLjAgTW9iaWxlIFNhZmFyaS81MzcuMzYiLF0NCnVhID0gWyJNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgMTM7IFNBTVNVTkcgU00tRzk5MEIyKSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBTYW1zdW5nQnJvd3Nlci8yMy4wIENocm9tZS8xMTUuMC4wLjAgTW9iaWxlIFNhZmFyaS81MzcuMzYiLF0NCnVhID0gWyJNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgMTQ7IFNBTVNVTkcgU00tQTUyOEIpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIFNhbXN1bmdCcm93c2VyLzIzLjAgQ2hyb21lLzExNS4wLjAuMCBNb2JpbGUgU2FmYXJpLzUzNy4zNiIsXQ0KdWEgPSBbIk1vemlsbGEvNS4wIChpUGhvbmU7IENQVSBpUGhvbmUgT1MgMTdfMiBsaWtlIE1hYyBPUyBYKSBBcHBsZVdlYktpdC82MDUuMS4xNSAoS0hUTUwsIGxpa2UgR2Vja28pIENyaU9TLzEyMC4wLjYwOTkuMTE5IE1vYmlsZS8xNUUxNDggU2FmYXJpLzYwNC4xIixdDQp1YSA9IFsiTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkIDEwOyBLKSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTExLjAuMC4wIE1vYmlsZSBTYWZhcmkvNTM3LjM2IixdDQp1YSA9IFsiTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzEyMS4wLjAuMCBTYWZhcmkvNTM3LjM2IixdDQp1YSA9IFsiTW96aWxsYS81LjAgKGlQaG9uZTEzLDI7IFU7IENQVSBpUGhvbmUgT1MgMTRfMCBsaWtlIE1hYyBPUyBYKSBBcHBsZVdlYktpdC82MDIuMS41MCAoS0hUTUwsIGxpa2UgR2Vja28pIFZlcnNpb24vMTAuMCBNb2JpbGUvMTVFMTQ4IFNhZmFyaS82MDIuMSIsXQ0KdWEgPSBbIk1vemlsbGEvNS4wIChpUGhvbmUxMiwxOyBVOyBDUFUgaVBob25lIE9TIDEzXzAgbGlrZSBNYWMgT1MgWCkgQXBwbGVXZWJLaXQvNjAyLjEuNTAgKEtIVE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uLzEwLjAgTW9iaWxlLzE1RTE0OCBTYWZhcmkvNjAyLjEiLF0NCnVhID0gWyJNb3ppbGxhLzUuMCAoaVBob25lMTIsMTsgVTsgQ1BVIGlQaG9uZSBPUyAxM18wIGxpa2UgTWFjIE9TIFgpIEFwcGxlV2ViS2l0LzYwMi4xLjUwIChLSFRNTCwgbGlrZSBHZWNrbykgVmVyc2lvbi8xMC4wIE1vYmlsZS8xNUUxNDggU2FmYXJpLzYwMi4xIixdDQoNCnVnZW4yPVtdDQp1Z2VuPVtdDQpjb2ticnV0PVtdDQpzZXM9cmVxdWVzdHMuU2Vzc2lvbigpDQpwcmluY3A9W10NCnRyeToNCiAgICBwcm94PSByZXF1ZXN0cy5nZXQoJ2h0dHBzOi8vZ2l0aHViLmNvbS9Qcm8tTWF4LTQyMC9BcGkvYmxvYi9tYWluL3Byb3gudHh0JykudGV4dA0KICAgIG9wZW4oJy5wcm94LnR4dCcsJ3cnKS53cml0ZShwcm94KQ0KZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOg0KICAgIHBhc3MNCnByb3g9b3BlbignLnByb3gudHh0JywncicpLnJlYWQoKS5zcGxpdGxpbmVzKCkNCmZvciB4ZCBpbiByYW5nZSgxMDAwMCk6DQogICAgYT0nTW96aWxsYS81LjAgKFN5bWJpYW4vMzsgU2VyaWVzNjAvJw0KICAgIGI9cmFuZG9tLnJhbmRyYW5nZSgxLCA5KQ0KICAgIGM9cmFuZG9tLnJhbmRyYW5nZSgxLCA5KQ0KICAgIGQ9J05va2lhJw0KICAgIGU9cmFuZG9tLnJhbmRyYW5nZSgxMDAsIDk5OTkpDQogICAgZj0nLzExMC4wMjEuMDAyODsgUHJvZmlsZS9NSURQLTIuMSBDb25maWd1cmF0aW9uL0NMREMtMS4xICkgQXBwbGVXZWJLaXQvNTM1LjEgKEtIVE1MLCBsaWtlIEdlY2tvKSBOb2tpYUJyb3dzZXIvJw0KICAgIGc9cmFuZG9tLnJhbmRyYW5nZSgxLCA5KQ0KICAgIGg9cmFuZG9tLnJhbmRyYW5nZSgxLCA0KQ0KICAgIGk9cmFuZG9tLnJhbmRyYW5nZSgxLCA0KQ0KICAgIGo9cmFuZG9tLnJhbmRyYW5nZSgxLCA0KQ0KICAgIGs9J01vYmlsZSBTYWZhcmkvNTM1LjEnDQogICAgdWFrdT0oZid7YX17Yn0ue2N9IHtkfXtlfXtmfXtnfS57aH0ue2l9LntqfSB7a30nKQ0KICAgIHVnZW4yLmFwcGVuZCh1YWt1KQ0KICAgIA0KICAgIGFhPSdNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgMTA7IFNNLUE3NTBGTiknDQogICAgYj1yYW5kb20uY2hvaWNlKFsnNicsJzcnLCc4JywnOScsJzEwJywnMTEnLCcxMiddKQ0KICAgIGM9JyBlbi11czsgR1QtJw0KICAgIGQ9cmFuZG9tLmNob2ljZShbJ0EnLCdCJywgJ0MnLCAnRCcsICdFJywgJ0YnLCAnRycsICdIJywgJ0knLCAnSicsICdLJywgJ0wnLCAnTScsICdOJywgJ08nLCAnUCcsICdRJywgJ1InLCAnUycsICdUJywgJ1UnLCAnVicsICdXJywgJ1gnLCAnWScsICdaJ10pDQogICAgZT1yYW5kb20ucmFuZHJhbmdlKDEsIDk5OSkNCiAgICBmPXJhbmRvbS5jaG9pY2UoWydBJywnQicsICdDJywgJ0QnLCAnRScsICdGJywgJ0cnLCAnSCcsICdJJywgJ0onLCAnSycsICdMJywgJ00nLCAnTicsICdPJywgJ1AnLCAnUScsICdSJywgJ1MnLCAnVCcsICdVJywgJ1YnLCAnVycsICdYJywgJ1knLCAnWiddKQ0KICAgIGc9J0FwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8nDQogICAgaD1yYW5kb20ucmFuZHJhbmdlKDczLDEwMCkNCiAgICBpPScwJw0KICAgIGo9cmFuZG9tLnJhbmRyYW5nZSg0MjAwLDQ5MDApDQogICAgaz1yYW5kb20ucmFuZHJhbmdlKDQwLDE1MCkNCiAgICBsPSdNb2JpbGUgU2FmYXJpLzUzNy4zNicNCiAgICB1YWt1Mj1mJ3thYX0ge2J9OyB7Y317ZH17ZX17Zn0pIHtnfXtofS57aX0ue2p9LntrfSB7bH0nDQogICAgdWdlbi5hcHBlbmQodWFrdTIpDQpmb3IgeCBpbiByYW5nZSgxMCk6DQogICAgYT0nTW96aWxsYS81LjAgKFNBTVNVTkc7IFNBTVNVTkctR1QtUycNCiAgICBiPXJhbmRvbS5yYW5kcmFuZ2UoMTAwLCA5OTk5KQ0KICAgIGM9cmFuZG9tLnJhbmRyYW5nZSgxMDAsIDk5OTkpDQogICAgZD1yYW5kb20uY2hvaWNlKFsnQScsJ0InLCAnQycsICdEJywgJ0UnLCAnRicsICdHJywgJ0gnLCAnSScsICdKJywgJ0snLCAnTCcsICdNJywgJ04nLCAnTycsICdQJywgJ1EnLCAnUicsICdTJywgJ1QnLCAnVScsICdWJywgJ1cnLCAnWCcsICdZJywgJ1onXSkNCiAgICBlPXJhbmRvbS5jaG9pY2UoWydBJywnQicsICdDJywgJ0QnLCAnRScsICdGJywgJ0cnLCAnSCcsICdJJywgJ0onLCAnSycsICdMJywgJ00nLCAnTicsICdPJywgJ1AnLCAnUScsICdSJywgJ1MnLCAnVCcsICdVJywgJ1YnLCAnVycsICdYJywgJ1knLCAnWiddKQ0KICAgIGY9cmFuZG9tLmNob2ljZShbJ0EnLCdCJywgJ0MnLCAnRCcsICdFJywgJ0YnLCAnRycsICdIJywgJ0knLCAnSicsICdLJywgJ0wnLCAnTScsICdOJywgJ08nLCAnUCcsICdRJywgJ1InLCAnUycsICdUJywgJ1UnLCAnVicsICdXJywgJ1gnLCAnWScsICdaJ10pDQogICAgZz1yYW5kb20uY2hvaWNlKFsnQScsJ0InLCAnQycsICdEJywgJ0UnLCAnRicsICdHJywgJ0gnLCAnSScsICdKJywgJ0snLCAnTCcsICdNJywgJ04nLCAnTycsICdQJywgJ1EnLCAnUicsICdTJywgJ1QnLCAnVScsICdWJywgJ1cnLCAnWCcsICdZJywgJ1onXSkNCiAgICBoPXJhbmRvbS5yYW5kcmFuZ2UoMSwgOSkNCiAgICBpPSc7IFU7IEJhZGEvMS4yOyBlbi11cykgQXBwbGVXZWJLaXQvNTMzLjEgKEtIVE1MLCBsaWtlIEdlY2tvKSBEb2xmaW4vJw0KICAgIGo9cmFuZG9tLnJhbmRyYW5nZSgxLCA5KQ0KICAgIGs9cmFuZG9tLnJhbmRyYW5nZSgxLCA5KQ0KICAgIGw9J01vYmlsZSBXVkdBIFNNTS1NTVMvMS4yLjAgT1BOLUInDQogICAgdWFrPWYne2F9e2J9L3tjfXtkfXtlfXtmfXtnfXtofXtpfXtqfS57a30ge2x9Jw0KZGVmIHVha3UoKToNCiAgICB0cnk6DQogICAgICAgIHVhPW9wZW4oJ2JibmV3LnR4dCcsJ3InKS5yZWFkKCkuc3BsaXRsaW5lcygpDQogICAgICAgIGZvciB1YiBpbiB1YToNCiAgICAgICAgICAgIHVnZW4uYXBwZW5kKHViKQ0KICAgIGV4Y2VwdDoNCiAgICAgICAgYT1yZXF1ZXN0cy5nZXQoJ2h0dHBzOi8vZ2l0aHViLmNvbS9Qcm8tTWF4LTQyMC91YS9ibG9iL21haW4vYmJuZXcudHh0JykudGV4dA0KICAgICAgICB1YT1vcGVuKCdiYm5ldy50eHQnLCd3JykNCiAgICAgICAgYWE9cmUuZmluZGFsbCgnbGluZSI+KC4qPyk8JyxzdHIoYSkpDQogICAgICAgIGZvciB1biBpbiBhYToNCiAgICAgICAgICAgIHVhLndyaXRlKHVuKydcbicpDQogICAgICAgIHVhPW9wZW4oJ2JibmV3LnR4dCcsJ3InKS5yZWFkKCkuc3BsaXRsaW5lcygpDQogDQoj4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSAWyBJTkRJQ0FUSU9OIF3ilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIAjDQppZCxpZDIsbG9vcCxvayxjcCxha3VuLG9wcmVrLG1ldGhvZCxsaXNlbnNpa3UsdGFwbGlrYXNpLHRva2Vua3UsdWlkLGxpc2Vuc2lrdW5pPSBbXSxbXSwwLDAsMCxbXSxbXSxbXSxbXSxbXSxbXSxbXSxbXQ0KY29rYnJ1dD1bXQ0KcHdwbHVzcyxwd255YT1bXSxbXQ0KIA0KIA0KDQoj4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSAWyBDT0xPUi1MSVNUXeKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgCMNCiANClAgPSAnXHgxYlsxOzk3bScNCk0gPSAnXHgxYlsxOzkxbScNCkggPSAnXHgxYlsxOzkybScNCksgPSAnXHgxYlsxOzkzbScNCkIgPSAnXHgxYlsxOzk0bScNClUgPSAnXHgxYlsxOzk1bScgDQpPID0gJ1x4MWJbMTs5Nm0nDQpOID0gJ1x4MWJbMG0nICAgIA0KWiA9ICJcMDMzWzE7MzBtIg0Kc2lyID0gJ1wwMzNbNDFtXHgxYlsxOzk3bScNCnggPSAnXDMzW20nICMgREVGQVVMVA0KbSA9ICdceDFiWzE7OTFtJyAjUkVEICsNCmsgPSAnXDAzM1s5M20nICMgS1VOSU5HICsNCmggPSAnXHgxYlsxOzkybScgIyBISUpBVSArDQpoaCA9ICdcMDMzWzMybScgIyBISUpBVSAtDQp1ID0gJ1wwMzNbOTVtJyAjIFVOR1UNCmtrID0gJ1wwMzNbMzNtJyAjIEtVTklORyAtDQpiID0gJ1wzM1sxOzk2bScgIyBCSVJVIC0NCnAgPSAnXHgxYlswOzM0bScgIyBCSVJVICsNCmFzdSA9IHJhbmRvbS5jaG9pY2UoW20sayxoLHUsYl0pDQogDQojIyPilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIBbIFJJQ0ggQ09MT1IgU1RZTEUgXeKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgCMjIw0KIA0KWiA9ICJceDFiWzA7OTBtIiAgICAgIyBIaXRhbQ0KTSA9ICJceDFiWzM4OzU7MTk2bSIgIyBNZXJhaA0KSCA9ICJceDFiWzM4OzU7NDZtIiAgIyBIaWphdQ0KSyA9ICJceDFiWzM4OzU7MjI2bSIgIyBLdW5pbmcNCkIgPSAiXHgxYlszODs1OzQ0bSIgICMgQmlydQ0KVSA9ICJceDFiWzA7OTVtIiAgICAgIyBVbmd1DQpPID0gIlx4MWJbMDs5Nm0iICAgICAjIEJpcnUgTXVkYQ0KUCA9ICJceDFiWzM4OzU7MjMxbSIgIyBQdXRpaA0KSiA9ICJceDFiWzM4OzU7MjA4bSIgIyBKaW5nZ2ENCkEgPSAiXHgxYlszODs1OzI0OG0iICMgQWJ1LUFidQ0KIA0KIyMj4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSAWyBSSUNIIENPTE9SIFNUWUxFIF3ilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIAjIyMNCiANCloyID0gIlsjMDAwMDAwXSIgIyBIaXRhbQ0KTTIgPSAiWyNGRjAwMDBdIiAjIE1lcmFoDQpIMiA9ICJbIzAwRkYwMF0iICMgSGlqYXUNCksyID0gIlsjRkZGRjAwXSIgIyBLdW5pbmcNCkIyID0gIlsjMDBDOEZGXSIgIyBCaXJ1DQpVMiA9ICJbI0FGMDBGRl0iICMgVW5ndQ0KTjIgPSAiWyNGRjAwRkZdIiAjIFBpbmsNCk8yID0gIlsjMDBGRkZGXSIgIyBCaXJ1IE11ZGENClAyID0gIlsjRkZGRkZGXSIgIyBQdXRpaA0KSjIgPSAiWyNGRjhGMDBdIiAjIEppbmdnYQ0KQTIgPSAiWyNBQUFBQUFdIiAjIEFidS1BYnUNCiANCiPilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIBbIENPTlZFUlRFUi1CVUxBTiBd4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSAIw0KIA0KZGljID0geycxJzonSmFudWFyeScsJzInOidGZWJydWFyeScsJzMnOidNYXJjaCcsJzQnOidBcHJpbCcsJzUnOidNYXknLCc2JzonSnVuZScsJzcnOidKdWx5JywnOCc6J0F1Z3VzdCcsJzknOidTZXB0ZW1iZXInLCcxMCc6J09jdG9iZXInLCcxMSc6J05vdmVtYmVyJywnMTInOidEZWNlbWJlcid9DQpkaWMyID0geycwMSc6J0phbnVhcnknLCcwMic6J0ZlYnJ1YXJ5JywnMDMnOidNYXJjaCcsJzA0JzonQXByaWwnLCcwNSc6J01heScsJzA2JzonSnVuZScsJzA3JzonSnVseScsJzA4JzonQXVndXN0JywnMDknOidTZXB0ZW1iZXInLCcxMCc6J09jdG9iZXInLCcxMSc6J05vdmVtYmVyJywnMTInOidEZXZlbWJlcid9DQp0Z2wgPSBkYXRldGltZS5kYXRldGltZS5ub3coKS5kYXkNCmJsbiA9IGRpY1soc3RyKGRhdGV0aW1lLmRhdGV0aW1lLm5vdygpLm1vbnRoKSldDQp0aG4gPSBkYXRldGltZS5kYXRldGltZS5ub3coKS55ZWFyDQpva2MgPSAnT0stJytzdHIodGdsKSsnLScrc3RyKGJsbikrJy0nK3N0cih0aG4pKycudHh0Jw0KY3BjID0gJ0NQLScrc3RyKHRnbCkrJy0nK3N0cihibG4pKyctJytzdHIodGhuKSsnLnR4dCcNCmRhdGUgPSBzdHIodGdsKSsnLycrc3RyKGJsbikrJy8nK3N0cih0aG4pDQpsdHggPSBpbnQobHQoKVszXSkNCmlmIGx0eCA+IDEyOg0KICAgIGEgPSBsdHgtMTINCiAgICB0YWcgPSAiUE0iDQplbHNlOg0KICAgIGEgPSBsdHgNCiAgICB0YWcgPSAiQU0iDQojLS0tLS0tLS0tLS0tLS0tLS0tWyBNQUNISU5FLVNVUFBPUlQgXS0tLS0tLS0tLS0tLS0tLSMNCiANCmRlZiBhbHZpbm9feHkodSk6DQogICAgICAgIGZvciBlIGluIHUgKyAiXG4iOnN5cy5zdGRvdXQud3JpdGUoZSk7c3lzLnN0ZG91dC5mbHVzaCgpO3RpbWUuc2xlZXAoMC4wMDUpDQpkZWYgY2xlYXIoKToNCiAgICBvcy5zeXN0ZW0oJ2NsZWFyJykNCmRlZiBiYWNrKCk6DQogICAgbG9naW4oKQ0KZGVmIGNvbnRhY3QoKToNCiAgICMgb3Muc3lzdGVtKCd4ZGctb3BlbiBodHRwczovL3d3dy5mYWNlYm9vay5jb20vREJaMjgwJykNCiAgICBiYWNrKCkNCmRlZiBsaW5leCgpOg0KICAgIHByaW50KCdcMDMzWzE7MzdtJykNCmRlZiBhbmltYXRpb24odSk6DQogICAgZm9yIGUgaW4gdSArICJcbiI6c3lzLnN0ZG91dC53cml0ZShlKTtzeXMuc3Rkb3V0LmZsdXNoKCk7dGltZS5zbGVlcCgwLjAxKQ0KI29zLnN5c3RlbSgieGRnLW9wZW4gaHR0cHM6Ly9tLmZhY2Vib29rLmNvbS9ncm91cHMvODIyNDMwMTA5NTI2MTUxLyIpDQogICAgICAgIA0KbG9nbyA9IiIiIA0KXDAzM1sxOzkybeKVlOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVlw0KXDAzM1sxOzkybeKVkSAgICAgICBcMDMzWzE7OTJt4pWU4pWQ4pWX4pWU4pWQ4pWXICBcMDMzWzE7OTJt4pWU4pWQ4pWX4pWmIOKVpuKVlOKVlyDilZTilZDilZfilabilZDilZcgICAgICAgICAgICAgXDAzM1sxOzkybSAg4pWRDQpcMDMzWzE7OTJt4pWRICAgICAgIFwwMzNbMTs5Mm3ilaDilZDilaPilaDilaMgICBcMDMzWzE7OTJt4pWRICDilZrilabilZ3ilaDilanilZfilZHilaMg4pWg4pWm4pWdICAgICAgICAgICAgICAgXDAzM1sxOzkybeKVkQ0KXDAzM1sxOzkybeKVkSAgICAgICBcMDMzWzE7OTJt4pWpIOKVqeKVmiAgICBcMDMzWzE7OTJt4pWa4pWQ4pWdIOKVqSDilZrilZDilZ3ilZrilZDilZ3ilanilZrilZAgICAgICAgICAgICAgICBcMDMzWzE7OTJt4pWRDQpcMDMzWzE7OTJt4pWRICAgICAgIFwwMzNbMTs5Mm0gICAgICAgICBcMDMzWzE7OTJtICAgICAgICAgICBceDFiWzM4OzU7NDdtICAgICAgICAgQUYgQ1lCRVIgXDAzM1sxOzkybeKVkQ0KXDAzM1sxOzkybeKVoOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVow0KXDAzM1sxOzkybeKVkSBERVZFTE9QRVIgXDAzM1sxOzkybSAgIOKdgiAgXHgxYlszODs1OzQ4bUFMQVggQVNJRiBHQU1JTkdcMDMzWzE7OTJtICAgICAgICAgICAg4pWRDQpcMDMzWzE7OTJt4pWRIEdJVEhVQiAgXDAzM1sxOzkybSAgICAgIOKdgiBceDFiWzM4OzU7NDdtIEFTSUYtNDA0XDAzM1sxOzkybSAgICAgICAgICAgICAgICAgICDilZENClwwMzNbMTs5Mm3ilZEgVkVSU0lPTiBcMDMzWzE7OTJtICAgICAgIOKdgiAgXHgxYlszODs1OzQ4bTEuMFwwMzNbMTs5Mm0gICAgICAgICAgICAgICAgICAgICAgIOKVkQ0KXDAzM1sxOzkybeKVkSBUT09MUyAgICBcMDMzWzE7OTJtICAgICAgIOKdgiBcMDMzWzE7OTJtIEZJTEUtL1BBSURcMDMzWzE7OTJtICAgICAgICAgICAgICAg4pWRDQpcMDMzWzE7OTJt4pWRIFdPUksgICAgIFwwMzNbMTs5Mm0gICAgICAgIOKdgiBceDFiWzM4OzU7NDdtIFdJRkkgJiBEQVRBXDAzM1sxOzkybSAgICAgICAgICAgICDilZENClwwMzNbMTs5Mm3ilZrilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZ0NClwwMzNbMTs5Mm3ilZTilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZcNClwwMzNbMTs5Mm3ilZFGQiBHUk9VUCA6IEFGIENZQkVSIFRFUk1VWCBGUkVFIENPTUFORCBXT1JMRFwwMzNbMTs5Mm0g4pWRDQpcMDMzWzE7OTJt4pWa4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWdIiIiDQpvcy5zeXN0ZW0oJ2NsZWFyJykNCnByaW50KGxvZ28pDQp1bmFtZSA9aW5wdXQoJ1wwMzNbMTs5MW1bXDAzM1sxOzkybeKAolwwMzNbMTs5MW1dXDAzM1sxOzkybSBZT1VSIENPVU5UUlkgTkFNRSBcMDMzWzE7OTFtOiBcMDMzWzE7MzVtJykNCmRlZiBiYWNrKCk6DQoJbG9naW4oKQ0KIA0KIA0KZGVmIGxvZ2luKCk6DQogICAgdHJ5Og0KICAgICAgICB0b2tlbiA9IG9wZW4oJy50b2tlbi50eHQnLCdyJykucmVhZCgpDQogICAgICAgIGNvayA9IG9wZW4oJy5jb2sudHh0JywncicpLnJlYWQoKQ0KICAgICAgICB0b2tlbmt1LmFwcGVuZCh0b2tlbikNCiAgICAgICAgdHJ5Og0KICAgICAgICAgICAgc3kgPSByZXF1ZXN0cy5nZXQoJ2h0dHBzOi8vZ3JhcGguZmFjZWJvb2suY29tL21lP2ZpZWxkcz1pZCxuYW1lJmFjY2Vzc190b2tlbj0nK3Rva2Vua3VbMF0sIGNvb2tpZXM9eydjb29raWUnOmNva30pDQogICAgICAgICAgICBzeTIgPSBqc29uLmxvYWRzKHN5LnRleHQpWyduYW1lJ10NCiAgICAgICAgICAgIHN5MyA9IGpzb24ubG9hZHMoc3kudGV4dClbJ2lkJ10NCiAgICAgICAgICAgIG1lbnUoc3kyLHN5MykNCiAgICAgICAgZXhjZXB0IEtleUVycm9yOg0KICAgICAgICAgICAgbG9naW5fbGFnaTMzNCgpDQogICAgICAgIGV4Y2VwdCByZXF1ZXN0cy5leGNlcHRpb25zLkNvbm5lY3Rpb25FcnJvcjoNCiAgICAgICAgICAgIHByaW50KCdcMDMzWzA7OTdtPT09PT09PT09PT09PT09PT0nKQ0KICAgICAgICAgICAgYW5pbWF0aW9uKCcgW8OXXSBOTyBJTlRFUk5FVCBDT05ORUNUSU9OIERFVEVDVEVEJykNCiAgICAgICAgICAgIGV4aXQoKQ0KICAgIGV4Y2VwdCBJT0Vycm9yOg0KICAgICAgICBsb2dpbl9sYWdpMzM0KCkNCmRlZiBsb2dpbl9sYWdpMzM0KCk6DQogICAgdHJ5Og0KICAgICAgICBvcy5zeXN0ZW0oJ2NsZWFyJykNCiAgICAgICAgcHJpbnQobG9nbykNCiAgICAgICAgc2VzID0gcmVxdWVzdHMuU2Vzc2lvbigpDQogICAgICAgIGNvb2tpZXMgPSB7J2Nvb2tpZSc6Y29va2llfQ0KICAgICAgICB1cmwgPSAnaHR0cHM6Ly93d3cuZmFjZWJvb2suY29tL2Fkc21hbmFnZXIvbWFuYWdlL2NhbXBhaWducycNCiAgICAgICAgcmVxID0gc2VzLmdldCh1cmwsY29va2llcz1jb29raWVzKQ0KICAgICAgICBzZXQgPSByZS5zZWFyY2goJ2FjdD0oLio/KSZuYXZfc291cmNlJyxzdHIocmVxLmNvbnRlbnQpKS5ncm91cCgxKQ0KICAgICAgICBuZWsgPSAnJXM/YWN0PSVzJm5hdl9zb3VyY2U9bm9fcmVmZXJyZXInJSh1cmwsc2V0KQ0KICAgICAgICByb3EgPSBzZXMuZ2V0KG5layxjb29raWVzPWNvb2tpZXMpDQogICAgICAgIHRvayA9IHJlLnNlYXJjaCgnYWNjZXNzVG9rZW49IiguKj8pIicsc3RyKHJvcS5jb250ZW50KSkuZ3JvdXAoMSkNCiAgICAgICAgdG9rZW53ID0gb3BlbigiLnRva2VuLnR4dCIsICJ3Iikud3JpdGUodG9rKQ0KICAgICAgICBjb2tpZXcgPSBvcGVuKCIuY29rLnR4dCIsICJ3Iikud3JpdGUoY29va2llKQ0KICAgICAgI2V4aXQoKQ0KICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToNCiAgICAgICAgb3Muc3lzdGVtKCJybSAtZiAudG9rZW4udHh0IikNCiAgICAgICAgb3Muc3lzdGVtKCJybSAtZiAuY29rLnR4dCIpDQogICAgICAgIG9zLnN5c3RlbSgicHl0aG9uIG5vbm8ucHkiKQ0KICAgICAgICBleGl0KCkNCg0KI+KUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgFsgTUFJTi1NRU5VIF3ilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIAjDQogIz09PcKpPT09Iw0KY2xhc3MgamFsYW46DQogICAgZGVmIF9faW5pdF9fKHNlbGYsIHopOg0KICAgICAgICBmb3IgZSBpbiB6ICsgIlxuIjoNCiAgICAgICAgICAgIHN5cy5zdGRvdXQud3JpdGUoZSkNCiAgICAgICAgICAgIHN5cy5zdGRvdXQuZmx1c2goKQ0KICAgICAgICAgICAgdGltZS5zbGVlcCgwLjA0MCkNCmRlZiBtZW51KCk6DQogICAgb3Muc3lzdGVtKCdjbGVhcicpDQogICAgcHJpbnQobG9nbykNCiAgICBwcmludChmIlwwMzNbOTc7MW1bXDAzM1s5MjsxbeKAolwwMzNbOTc7MW1dIFwwMzNbMTs5Mm1VU0VSIE5BTUVcMDMzWzE7OTFtIDpcMDMzWzE7OTZtICIrdW5hbWUpDQogICAgcHJpbnQoJ1wwMzNbMTszM209PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PScpDQogICAgcHJpbnQoZiIiIlwwMzNbOTc7MW1bXDAzM1s5MjsxbTFcMDMzWzk3OzFtXSBcMDMzWzA7OTJtRklMRSBDTE9OSU5HICAgICAgICAgIiIiKQ0KICAgIHByaW50KGYiIiJcMDMzWzk3OzFtW1wwMzNbOTI7MW0yXDAzM1s5NzsxbV0gXDAzM1s5MjsxbUNIRUNLIE9LIElEeiAgICIiIikNCiAgICBwcmludCgiIiJcMDMzWzk3OzFtW1wwMzNbOTI7MW0wXDAzM1s5NzsxbV0gXDAzM1swOzkxbUVYSVQiIiIpDQogICAgcHJpbnQoJ1wwMzNbMTszM209PT09PT09PT09PT09PT09PScpDQogICAgQVNJRiA9IGlucHV0KCdceDFiWzE7OTJtW+KAol0gQ0hPT1NFOiAnKQ0KICAgIGlmIEFTSUYgaW4gWycxMTEnXToNCiAgICAgICAgbG9naW4oKQ0KICAgICAgICBkdW1wX21hc3NhbCgpDQogICAgZWxpZiBBU0lGIGluIFsnMSddOg0KICAgICAgICBjcmFja19maWxlKCkNCiAgICBlbGlmIEFTSUYgaW4gWycyJywnMDInXToNCiAgICAgICAgcmVzdWx0KCkNCiAgICBlbGlmIEFTSUYgaW4gWycwJ106DQogICAgICAgIG9zLnN5c3RlbSgncm0gLXJmIC50b2tlbi50eHQnKQ0KICAgICAgICBvcy5zeXN0ZW0oJ3JtIC1yZiAuY29va2llLnR4dCcpDQogICAgICAgIHByaW50KCdcMDMzWzE7MzNtPT09PT09PT09PT09PT09PT0nKQ0KICAgICAgICBhbmltYXRpb24oJyBbw5ddIERPTkUgRVhJVCAnKQ0KICAgICAgICBleGl0KCkNCiAgICBlbHNlOg0KICAgICAgICBwcmludCgnXDAzM1swOzk3bT09PT09PT09PT09PT09PT09JykNCiAgICAgICAgYW5pbWF0aW9uKCcgW8OXXSBTRUxFQ1QgQ09SUkVDVExZICcpDQogICAgICAgIGJhY2soKQ0KIA0KI+KUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgFsgT0stQ1AgXeKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgCMNCiANCmRlZiByZXN1bHQoKToNCiAgICBvcy5zeXN0ZW0oJ2NsZWFyJykNCiAgICBwcmludChsb2dvKQ0KICAgIHByaW50KCcgXDAzM1s5NzsxbVtcMDMzWzkyOzFtMVwwMzNbOTc7MW1dIENIRUNLIENQIElEWiAnKQ0KICAgIHByaW50KCcgXDAzM1s5NzsxbVtcMDMzWzkyOzFtMlwwMzNbOTc7MW1dIENIRUNLIE9LIElEWiAnKQ0KICAgIHByaW50KCcgXDAzM1s5NzsxbVtcMDMzWzkyOzFtM1wwMzNbOTc7MW1dIEVYSVQgJykNCiAgICBwcmludCgnXDAzM1swOzkxbT09PT09PT09PT09PT09PT09PScpDQogICAga3ogPSBpbnB1dCgnIFwwMzNbOTc7MW1bXDAzM1s5MjsxbeKAolwwMzNbOTc7MW1dQ0hPT1NFIDogJykNCiAgICBpZiBreiBpbiBbJzEnLCcwMSddOg0KICAgICAgICB0cnk6dmluID0gb3MubGlzdGRpcignQ1AnKQ0KICAgICAgICBleGNlcHQgRmlsZU5vdEZvdW5kRXJyb3I6DQogICAgICAgICAgICBwcmludCgnXDAzM1swOzkxbT09PT09PT09PT09PT09PT09PScpDQogICAgICAgICAgICBhbmltYXRpb24oJyBcMDMzWzk3OzFtW1wwMzNbOTI7MW3igKJcMDMzWzk3OzFtXSBGSUxFIE5PVCBGT1VORCAnKQ0KICAgICAgICAgICAgdGltZS5zbGVlcCgzKQ0KICAgICAgICAgICAgYmFjaygpDQogICAgICAgIGlmIGxlbih2aW4pPT0wOg0KICAgICAgICAgICAgcHJpbnQoJ1wwMzNbMDs5MW09PT09PT09PT09PT09PT09PT0nKQ0KICAgICAgICAgICAgYW5pbWF0aW9uKCcgXDAzM1s5NzsxbVtcMDMzWzkyOzFt4oCiXDAzM1s5NzsxbV0gTk8gQ1AgUkVTVUxUUyBGT1VORCAnKQ0KICAgICAgICAgICAgdGltZS5zbGVlcCgyKQ0KICAgICAgICAgICAgYmFjaygpDQogICAgICAgIGVsc2U6DQogICAgICAgICAgICBjaWggPSAwDQogICAgICAgICAgICBsb2wgPSB7fQ0KICAgICAgICAgICAgZm9yIGlzaSBpbiB2aW46DQogICAgICAgICAgICAgICAgdHJ5OmhlbSA9IG9wZW4oJ0NQLycraXNpLCdyJykucmVhZGxpbmVzKCkNCiAgICAgICAgICAgICAgICBleGNlcHQ6Y29udGludWUNCiAgICAgICAgICAgICAgICBjaWgrPTENCiAgICAgICAgICAgICAgICBpZiBjaWg8MTA6DQogICAgICAgICAgICAgICAgICAgIG5vbSA9ICcnK3N0cihjaWgpDQogICAgICAgICAgICAgICAgICAgIGxvbC51cGRhdGUoe3N0cihjaWgpOnN0cihpc2kpfSkNCiAgICAgICAgICAgICAgICAgICAgbG9sLnVwZGF0ZSh7bm9tOnN0cihpc2kpfSkNCiAgICAgICAgICAgICAgICAgICAgcHJpbnQoJ1wwMzNbMDs5MW09PT09PT09PT09PT09PT09PT0nKQ0KICAgICAgICAgICAgICAgICAgICBwcmludCgnICcrbm9tKycuICcraXNpKydcMDMzWzMxbSAnK3N0cihsZW4oaGVtKSkrJyBcMDMzWzBtIENQICcreCkNCiAgICAgICAgICAgICAgICBlbHNlOg0KICAgICAgICAgICAgICAgICAgICBsb2wudXBkYXRlKHtzdHIoY2loKTpzdHIoaXNpKX0pDQogICAgICAgICAgICAgICAgICAgIHByaW50KCcgJytzdHIoY2loKSsnLiAnK2lzaSsnXDAzM1szMW0gJytzdHIobGVuKGhlbSkpKycgXDAzM1swbSBDUCAnK3gpDQogICAgICAgICAgICBwcmludCgnXDAzM1swOzkxbT09PT09PT09PT09PT09PT09PScpDQogICAgICAgICAgICBnZWVoID0gaW5wdXQoJyBcMDMzWzk3OzFtW1wwMzNbOTI7MW3igKJcMDMzWzk3OzFtXSBDSE9PU0UgOiAnKQ0KICAgICAgICAgICAgcHJpbnQoJ1wwMzNbMDs5MW09PT09PT09PT09PT09PT09PT0nKQ0KICAgICAgICAgICAgdHJ5OmdlaCA9IGxvbFtnZWVoXQ0KICAgICAgICAgICAgZXhjZXB0IEtleUVycm9yOg0KICAgICAgICAgICAgICAgIHByaW50KCdcMDMzWzA7OTFtPT09PT09PT09PT09PT09PT09JykNCiAgICAgICAgICAgICAgICBhbmltYXRpb24oJyBcMDMzWzk3OzFtW1wwMzNbOTI7MW3igKJcMDMzWzk3OzFtXSBOTyBPUFRJT04gRk9VTkQgJykNCiAgICAgICAgICAgICAgICBleGl0KCkNCiAgICAgICAgICAgIHRyeTpsaW4gPSBvcGVuKCdDUC8nK2dlaCwncicpLnJlYWQoKS5zcGxpdGxpbmVzKCkNCiAgICAgICAgICAgIGV4Y2VwdDoNCiAgICAgICAgICAgICAgICBwcmludCgnXDAzM1swOzkxbT09PT09PT09PT09PT09PT09PScpDQogICAgICAgICAgICAgICAgYW5pbWF0aW9uKCcgXDAzM1s5NzsxbVtcMDMzWzkyOzFt4oCiXDAzM1s5NzsxbV0gRklMRSBOT1QgRk9VTkQgJykNCiAgICAgICAgICAgICAgICB0aW1lLnNsZWVwKDIpDQogICAgICAgICAgICAgICAgYmFjaygpDQogICAgICAgICAgICBub2NwPTANCiAgICAgICAgICAgIGZvciBjcGt1IGluIHJhbmdlKGxlbihsaW4pKToNCiAgICAgICAgICAgICAgICBjcGt1bmk9bGluW25vY3BdLnNwbGl0KCd8JykNCiAgICAgICAgICAgICAgICBwcmludChmJyBcMDMzWzk3OzFtW1wwMzNbOTI7MW3igKJcMDMzWzk3OzFtXSBDUCA6IFwwMzNbMzNtIHtjcGt1bmlbMF19fHtjcGt1bmlbMV19XDAzM1swbScpDQogICAgICAgICAgICAgICAgbm9jcCArPTENCiAgICAgICAgICAgIHByaW50KCdcMDMzWzA7OTFtPT09PT09PT09PT09PT09PT09JykNCiAgICAgICAgICAgIGlucHV0KCdcMDMzWzk3OzFtW1wwMzNbOTI7MW3igKJcMDMzWzk3OzFtXSBQUkVTUyBFTlRFUiBUTyBCQUNLICcpDQogICAgICAgICAgICBiYWNrKCkNCiAgICBlbGlmIGt6IGluIFsnMicsJzAyJ106DQogICAgICAgIHRyeTp2aW4gPSBvcy5saXN0ZGlyKCdPSycpDQogICAgICAgIGV4Y2VwdCBGaWxlTm90Rm91bmRFcnJvcjoNCiAgICAgICAgICAgIHByaW50KCdcMDMzWzA7OTFtPT09PT09PT09PT09PT09PT09JykNCiAgICAgICAgICAgIGFuaW1hdGlvbignIFwwMzNbOTc7MW1bXDAzM1s5MjsxbeKAolwwMzNbOTc7MW1dIEZJTEUgTk9UIEZPVU5EICcpDQogICAgICAgICAgICB0aW1lLnNsZWVwKDIpDQogICAgICAgICAgICBiYWNrKCkNCiAgICAgICAgaWYgbGVuKHZpbik9PTA6DQogICAgICAgICAgICBwcmludCgnXDAzM1swOzkxbT09PT09PT09PT09PT09PT09PScpDQogICAgICAgICAgICBhbmltYXRpb24oJyBcMDMzWzk3OzFtW1wwMzNbOTI7MW3igKJcMDMzWzk3OzFtXSBOTyBPSyBSRVNVTFRTIEZPVU5EICcpDQogICAgICAgICAgICB0aW1lLnNsZWVwKDIpDQogICAgICAgICAgICBiYWNrKCkNCiAgICAgICAgZWxzZToNCiAgICAgICAgICAgIGNpaCA9IDANCiAgICAgICAgICAgIGxvbCA9IHt9DQogICAgICAgICAgICBmb3IgaXNpIGluIHZpbjoNCiAgICAgICAgICAgICAgICB0cnk6aGVtID0gb3BlbignT0svJytpc2ksJ3InKS5yZWFkbGluZXMoKQ0KICAgICAgICAgICAgICAgIGV4Y2VwdDpjb250aW51ZQ0KICAgICAgICAgICAgICAgIGNpaCs9MQ0KICAgICAgICAgICAgICAgIGlmIGNpaDwxMDA6DQogICAgICAgICAgICAgICAgICAgIHByaW50KCdcMDMzWzA7OTFtPT09PT09PT09PT09PT09PT09JykNCiAgICAgICAgICAgICAgICAgICAgbm9tID0gJycrc3RyKGNpaCkNCiAgICAgICAgICAgICAgICAgICAgbG9sLnVwZGF0ZSh7c3RyKGNpaCk6c3RyKGlzaSl9KQ0KICAgICAgICAgICAgICAgICAgICBsb2wudXBkYXRlKHtub206c3RyKGlzaSl9KQ0KICAgICAgICAgICAgICAgICAgICBwcmludCgnICcrbm9tKycuICcraXNpKydcMDMzWzMybSAnK3N0cihsZW4oaGVtKSkrJyBcMDMzWzBtIE9LICcreCkNCiAgICAgICAgICAgICAgICBlbHNlOg0KICAgICAgICAgICAgICAgICAgICBsb2wudXBkYXRlKHtzdHIoY2loKTpzdHIoaXNpKX0pDQogICAgICAgICAgICAgICAgICAgIHByaW50KCcgJytzdHIoY2loKSsnLiAnK2lzaSsnXDAzM1szMm0gJytzdHIobGVuKGhlbSkpKycgXDAzM1swbSBPSyAnK3gpDQogICAgICAgICAgICBwcmludCgnXDAzM1swOzkxbT09PT09PT09PT09PT09PT09PScpDQogICAgICAgICAgICBnZWVoID0gaW5wdXQoJyBceDFiWzE7OTJtIFvigKJdIENIT09TRSA6ICcpDQogICAgICAgICAgICBwcmludCgnXDAzM1swOzkxbT09PT09PT09PT09PT09PT09PScpDQogICAgICAgICAgICB0cnk6Z2VoID0gbG9sW2dlZWhdDQogICAgICAgICAgICBleGNlcHQgS2V5RXJyb3I6DQogICAgICAgICAgICAgICAgcHJpbnQoJ1wwMzNbMDs5MW09PT09PT09PT09PT09PT09PT0nKQ0KICAgICAgICAgICAgICAgIGFuaW1hdGlvbignIFwwMzNbOTc7MW1bXDAzM1s5MjsxbeKAolwwMzNbOTc7MW1dIE5PIE9QVElPTiBGT1VORCAnKQ0KICAgICAgICAgICAgICAgIGV4aXQoKQ0KICAgICAgICAgICAgdHJ5OmxpbiA9IG9wZW4oJ09LLycrZ2VoLCdyJykucmVhZCgpLnNwbGl0bGluZXMoKQ0KICAgICAgICAgICAgZXhjZXB0Og0KICAgICAgICAgICAgICAgIHByaW50KCdcMDMzWzA7OTFtPT09PT09PT09PT09PT09PT09JykNCiAgICAgICAgICAgICAgICBhbmltYXRpb24oJyBcMDMzWzk3OzFtW1wwMzNbOTI7MW3igKJcMDMzWzk3OzFtXSBGSUxFIE5PVCBGT1VORCAnKQ0KICAgICAgICAgICAgICAgIHRpbWUuc2xlZXAoMikNCiAgICAgICAgICAgICAgICBiYWNrKCkNCiAgICAgICAgICAgIG5vY3A9MA0KICAgICAgICAgICAgZm9yIGNwa3UgaW4gcmFuZ2UobGVuKGxpbikpOg0KICAgICAgICAgICAgICAgIGNwa3VuaT1saW5bbm9jcF0uc3BsaXQoJ3wnKQ0KICAgICAgICAgICAgICAgIHByaW50KGYnXDAzM1s5NzsxbVtcMDMzWzkyOzFt4oCiXDAzM1s5NzsxbV0gT0sgOiBcMDMzWzMybSB7Y3BrdW5pWzBdfXx7Y3BrdW5pWzFdfVwwMzNbMG0nKQ0KICAgICAgICAgICAgICAgIG5vY3AgKz0xDQogICAgICAgICAgICBwcmludCgnXDAzM1swOzkxbT09PT09PT09PT09PT09PT09PScpDQogICAgICAgICAgICBpbnB1dCgnXDAzM1s5NzsxbVtcMDMzWzkyOzFt4oCiXDAzM1s5NzsxbV0gUFJFU1MgRU5URVIgVE8gQkFDSyAnKQ0KICAgICAgICAgICAgYmFjaygpDQogICAgZWxpZiBreiBpbiBbJzAnLCcwMCddOg0KICAgICAgICBiYWNrKCkNCiAgICBlbHNlOg0KICAgICAgICBwcmludCgnXDAzM1swOzkxbT09PT09PT09PT09PT09PT09PScpDQogICAgICAgIGFuaW1hdGlvbignIFwwMzNbOTc7MW1bXDAzM1s5MjsxbeKAolwwMzNbOTc7MW1dIE5PIE9QVElPTiBGT1VORCBJTiBNRU5VJykNCiAgICAgICAgZXhpdCgpDQogDQojLS0tLS0tLS0tLS0tLS0tLS0tLVsgQ1JBQ0stUFVCTElLIF0tLS0tLS0tLS0tLS0tLS0tIw0KIA0KZGVmIGR1bXBfbWFzc2FsKCk6DQogICAgdHJ5Og0KICAgICAgICB0b2tlbiA9IG9wZW4oJy50b2tlbi50eHQnLCdyJykucmVhZCgpDQogICAgICAgIGNvayA9IG9wZW4oJy5jb2sudHh0JywncicpLnJlYWQoKQ0KICAgIGV4Y2VwdCBJT0Vycm9yOg0KICAgICAgICBleGl0KCkNCiAgICB0cnk6DQogICAgICAgIHByaW50KCdcMDMzWzA7OTFtPT09PT09PT09PT09PT09PT09JykNCiAgICAgICAganVtID0gaW50KGlucHV0KCcgXDAzM1s5NzsxbVtcMDMzWzkyOzFt4oCiXDAzM1s5NzsxbV0gRU5URVIgVEFSR0VUIEFNT1VOVCAgOiAnKSkNCiAgICAgICAgcHJpbnQoJ1wwMzNbMDs5MW09PT09PT09PT09PT09PT09PT0nKQ0KICAgIGV4Y2VwdCBWYWx1ZUVycm9yOg0KICAgICAgICBwcmludCgnXDAzM1swOzkxbT09PT09PT09PT09PT09PT09PScpDQogICAgICAgIGFuaW1hdGlvbignIFvDl10gSU5WQUxJRCBPUFRJT04gJykNCiAgICAgICAgZXhpdCgpDQogICAgaWYganVtPDEgb3IganVtPjEwMDAwMDAwMDoNCiAgICAgICAgcHJpbnQoJ1wwMzNbMDs5MW09PT09PT09PT09PT09PT09PT0nKQ0KICAgICAgICBhbmltYXRpb24oJyBbw5ddIFRSWSBBR0FJTiAnKQ0KICAgICAgICBleGl0KCkNCiAgICBzZXM9cmVxdWVzdHMuU2Vzc2lvbigpDQogICAgeXogPSAwDQogICAgZm9yIG1ldCBpbiByYW5nZShqdW0pOg0KICAgICAgICB5eis9MQ0KICAgICAgICBrbCA9IGlucHV0KCcgXDAzM1s5NzsxbVtcMDMzWzkyOzFt4oCiXDAzM1s5NzsxbV0gSU5QVVQgVUlEICcrc3RyKHl6KSsnIDogJykNCiAgICAgICAgdWlkLmFwcGVuZChrbCkNCiAgICBmb3IgdXNlcnIgaW4gdWlkOg0KICAgICAgICB0cnk6DQogICAgICAgICAgICBjb2wgPSBzZXMuZ2V0KCdodHRwczovL2dyYXBoLmZhY2Vib29rLmNvbS92Mi4wLycrdXNlcnIrJz9maWVsZHM9ZnJpZW5kcy5saW1pdCg1MDAwKSZhY2Nlc3NfdG9rZW49Jyt0b2tlbmt1WzBdLCBjb29raWVzID0geydjb29raWVzJzpjb2t9KS5qc29uKCkNCiAgICAgICAgICAgIGZvciBtaSBpbiBjb2xbJ2ZyaWVuZHMnXVsnZGF0YSddOg0KICAgICAgICAgICAgICAgIHRyeToNCiAgICAgICAgICAgICAgICAgICAgaXNvID0gKG1pWydpZCddKyd8JyttaVsnbmFtZSddKQ0KICAgICAgICAgICAgICAgICAgICBpZiBpc28gaW4gaWQ6cGFzcw0KICAgICAgICAgICAgICAgICAgICBlbHNlOmlkLmFwcGVuZChpc28pDQogICAgICAgICAgICAgICAgZXhjZXB0OmNvbnRpbnVlDQogICAgICAgIGV4Y2VwdCAoS2V5RXJyb3IsSU9FcnJvcik6DQogICAgICAgICAgICBwYXNzDQogICAgICAgIGV4Y2VwdCByZXF1ZXN0cy5leGNlcHRpb25zLkNvbm5lY3Rpb25FcnJvcjoNCiAgICAgICAgICAgIHByaW50KCdcMDMzWzA7OTFtPT09PT09PT09PT09PT09PT09JykNCiAgICAgICAgICAgIGFuaW1hdGlvbignIFvDl10gVFJZIEFHQUlOICcpDQogICAgICAgICAgICBvcy5zeXN0ZW0oJ2NsZWFyJykNCiAgICB0cnk6DQogICAgICAgIHByaW50KCdcMDMzWzA7OTFtPT09PT09PT09PT09PT09PT09JykNCiAgICAgICAgcHJpbnQoZicgXDAzM1s5NzsxbVtcMDMzWzkyOzFt4oCiXDAzM1s5NzsxbV0gVE9UQUwgSUQgOiBcdTAwMWJbMzZtJytzdHIobGVuKGlkKSkrJ1wwMzNbMTszN20nKQ0KICAgICAgICBzZXR0aW5nKCkNCiAgICBleGNlcHQgcmVxdWVzdHMuZXhjZXB0aW9ucy5Db25uZWN0aW9uRXJyb3I6DQogICAgICAgIHByaW50KGYne3V9JykNCiAgICAgICAgYmFjaygpDQogICAgZXhjZXB0IChLZXlFcnJvcixJT0Vycm9yKToNCiAgICAgICAgcHJpbnQoJ1wwMzNbMDs5MW09PT09PT09PT09PT09PT09PT0nKQ0KICAgICAgICBhbmltYXRpb24oIiBbw5ddIERVTVAgSUQgRkFJTEVEICIpDQogICAgICAgIHRpbWUuc2xlZXAoMykNCiAgICAgICAgYmFjaygpDQogDQoj4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSAWyBGSUxFLU5BTUUgXeKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgCMNCiANCmRlZiBjcmFja19maWxlKCk6DQogICAgcHJpbnQoJ1wwMzNbMTszM209PT09PT09PT09PT09PT09PT0nKQ0KICAgIG9zLnN5c3RlbSgnZXNwZWFrIC1hIDMwMCAiIHlvdXIgZmlsZSBuYW1lIicpDQogICAgcHJpbnQoJ1wwMzNbMTszMm1bXDAzM1s5MjsxbeKAolwwMzNbOTc7MW1dIFB1dCBGaWxlIEV4YW1wbGU6IC9zZGNhcmQvZmlsZS50eHQnKQ0KICAgIG8gPSBpbnB1dCgnXDAzM1s5NzsxbVtcMDMzWzkyOzFt4oCiXDAzM1s5NzsxbV0gSU5QVVQgRklMRSBOQU1FIDpcMDMzWzkyOzFtICcpDQogICAgdHJ5OmxpbiA9IG9wZW4obykucmVhZCgpLnNwbGl0bGluZXMoKQ0KICAgIGV4Y2VwdDoNCiAgICAgICAgcHJpbnQoJ1wwMzNbMDs5MW09PT09PT09PT09PT09PT09PT0nKQ0KICAgICAgICBhbmltYXRpb24oJyBbw5ddIEZJTEUgTk9UIEZPVU5EJykNCiAgICAgICAgdGltZS5zbGVlcCgyKQ0KICAgICAgICBiYWNrKCkNCiAgICBmb3IgeGlkIGluIGxpbjoNCiAgICAgICAgaWQuYXBwZW5kKHhpZCkNCiAgICBzZXR0aW5nKCkNCiANCiPilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIBbIENMT05JTkctSURaIF3ilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIAjDQogDQpkZWYgc2V0dGluZygpOg0KICAgIHByaW50KCdcMDMzWzE7MzNtPT09PT09PT09PT09PT09PT09PT09PT09PT09PT0nKQ0KICAgIHByaW50KCJcMDMzWzk3OzFtW1wwMzNbOTI7MW0xXDAzM1s5NzsxbV0gXDAzM1swOzkybUNMT05JTkcgT05MWSBPTEQgSUR6IikNCiAgICBwcmludCgiXDAzM1s5NzsxbVtcMDMzWzkyOzFtMlwwMzNbOTc7MW1dIFwwMzNbMDs5Mm1DTE9OSU5HIE9OTFkgTkVXIElEeiIpDQogICAgcHJpbnQoIlwwMzNbOTc7MW1bXDAzM1s5MjsxbTNcMDMzWzk3OzFtXSBcMDMzWzA7OTJtQ0xPTklORyBNSVggSUR6IikNCiAgICBwcmludCgnXDAzM1sxOzMzbT09PT09PT09PT09PT09PT09PT09PT09PT09PT09JykNCiAgICBodSA9IGlucHV0KCdcMDMzWzk3OzFtW1wwMzNbOTI7MW3igKJcMDMzWzk3OzFtXUNIT09TRSA6XDAzM1s5MjsxbSAnKQ0KICAgIGlmIGh1IGluIFsnMScsJzAxJ106DQogICAgICAgIGZvciB0dWEgaW4gc29ydGVkKGlkKToNCiAgICAgICAgICAgIGlkMi5hcHBlbmQodHVhKQ0KICAgIGVsaWYgaHUgaW4gWycyJywnMDInXToNCiAgICAgICAgbXVkYT1bXSANCiAgICAgICAgZm9yIGJhY290IGluIHNvcnRlZChpZCk6DQogICAgICAgICAgICBtdWRhLmFwcGVuZChiYWNvdCkNCiAgICAgICAgYmNtPWxlbihtdWRhKQ0KICAgICAgICBiY21pPShiY20tMSkNCiAgICAgICAgZm9yIHhtdWQgaW4gcmFuZ2UoYmNtKToNCiAgICAgICAgICAgIGlkMi5hcHBlbmQobXVkYVtiY21pXSkNCiAgICAgICAgICAgIGJjbWkgLT0xDQogICAgZWxpZiBodSBpbiBbJzMnLCcwMyddOg0KICAgICAgICBmb3IgYmFjb3QgaW4gaWQ6DQogICAgICAgICAgICB4eCA9IHJhbmRvbS5yYW5kaW50KDAsbGVuKGlkMikpDQogICAgICAgICAgICBpZDIuaW5zZXJ0KHh4LGJhY290KQ0KICAgIGVsc2U6DQogICAgICAgIGZvciBiYWNvdCBpbiBpZDoNCiAgICAgICAgICAgIHh4ID0gcmFuZG9tLnJhbmRpbnQoMCxsZW4oaWQyKSkNCiAgICAgICAgICAgIGlkMi5pbnNlcnQoeHgsYmFjb3QpDQogICAgcHJpbnQoJ1wwMzNbMTszM209PT09PT09PT09PT09PT09PT0nKQ0KICAgIHByaW50KCdcMDMzWzE7MzNtPT09PT09PT09PT09PT09PT09JykNCiAgICBwcmludCgiXDAzM1s5NzsxbVtcMDMzWzkyOzFtMVwwMzNbOTc7MW1dIE1FVEhPRCAxIFtcMDMzWzA7OTJtQ29va2llcyBTaG93L1wwMzNbMDs5MW1DUCBJRCBOb3QgU2hvd1wwMzNbMTszN21dIikNCiAgICBwcmludCgiXDAzM1s5NzsxbVtcMDMzWzkyOzFtMlwwMzNbOTc7MW1dIE1FVEhPRCAyIFtcMDMzWzA7OTNtQ3AgaWQgU2hvd1wwMzNbMTszN21dIikNCiAgICBwcmludCgnXDAzM1sxOzMzbT09PT09PT09PT09PT09PT09PScpDQogICAgaGMgPSBpbnB1dCgnXDAzM1s5NzsxbVtcMDMzWzkyOzFt4oCiXDAzM1s5NzsxbV0gQ0hPT1NFIDogJykNCiAgICAjb3Muc3lzdGVtKCJ4ZGctb3BlbiBodHRwczovL3d3dy5mYWNlYm9vay5jb20vQVNJRi5LaW5nLk9rLkJybyIpDQogICAgaWYgaGMgaW4gWycxJywnMDEnXToNCiAgICAgICAgbWV0aG9kLmFwcGVuZCgnbW9iaWxlJykNCiAgICBlbGlmIGhjIGluIFsnMicsJzAyJ106DQogICAgICAgIG1ldGhvZC5hcHBlbmQoJ2ZyZWUnKQ0KICAgIGVsc2U6DQogICAgICAgIG1ldGhvZC5hcHBlbmQoJ21vYmlsZScpDQogICAgcGFzc3dyZCgpDQogICAgZXhpdCgpIA0KIA0KI+KUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgFsgRklMRS1XT1JETElTVCBd4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSAIw0KIA0KZGVmIHBhc3N3cmQoKToNCiAgICBvcy5zeXN0ZW0oJ2NsZWFyJykNCiAgICBwcmludChsb2dvKQ0KICAgIHByaW50KGYiXDAzM1s5NzsxbVtcMDMzWzkyOzFt4oCiXDAzM1s5NzsxbV0gXDAzM1sxOzkybVVTRVIgTkFNRVwwMzNbMTs5MW0gOlwwMzNbMTs5Nm0gIit1bmFtZSkNCiAgICBwcmludCgnXDAzM1s5NzsxbVtcMDMzWzkyOzFt4oCiXDAzM1s5NzsxbV0gXDAzM1sxOzkybVlPVVIgVE9UQUwgSUR6IFwwMzNbMDs5N206XDAzM1sxOzkybSAnLHN0cihsZW4oaWQpKSkNCiAgICBwcmludChmJ1wwMzNbOTc7MW1bXDAzM1s5MjsxbeKAolwwMzNbOTc7MW1dIFwwMzNbMTs5Mm1Vc2UgQWlycGxhbmUgTW9kZSBGb3IgU3BlZWQgVXAgJykNCiAgICBwcmludCgnXDAzM1sxOzMzbT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09JykNCiAgICB3aXRoIHRyZWQobWF4X3dvcmtlcnM9MzApIGFzIHBvb2w6DQogICAgICAgIGZvciB5dXpvbmcgaW4gaWQyOg0KICAgICAgICAgICAgaWRmLG5tZiA9IHl1em9uZy5zcGxpdCgnfCcpWzBdLHl1em9uZy5zcGxpdCgnfCcpWzFdLmxvd2VyKCkNCiAgICAgICAgICAgIGZycyA9IG5tZi5zcGxpdCgnICcpWzBdDQogICAgICAgICAgICBwd3YgPSBbXQ0KICAgICAgICAgICAgaWYgbGVuKG5tZik8NjoNCiAgICAgICAgICAgICAgICBpZiBsZW4oZnJzKTwzOg0KICAgICAgICAgICAgICAgICAgICBwYXNzDQogICAgICAgICAgICAgICAgZWxzZToNCiAgICAgICAgICAgICAgICAgICAgcHd2LmFwcGVuZChmcnMrJzEyJykNCiAgICAgICAgICAgICAgICAgICAgcHd2LmFwcGVuZChmcnMrJzEyMycpDQogICAgICAgICAgICAgICAgICAgIHB3di5hcHBlbmQoZnJzKycxMjM0JykNCiAgICAgICAgICAgICAgICAgICAgcHd2LmFwcGVuZChmcnMrJzEyMzQ1JykNCiAgICAgICAgICAgICAgICAgICAgcHd2LmFwcGVuZChmcnMrJzEyMzQ1NicpDQogICAgICAgICAgICAgICAgICAgIHB3di5hcHBlbmQobm1mKQ0KICAgICAgICAgICAgICAgICAgICBwd3YuYXBwZW5kKCc1NzI3MzIwMCcpDQogICAgICAgICAgICAgICAgICAgIHB3di5hcHBlbmQoZnJzKydAMTIzJykNCiAgICAgICAgICAgICAgICAgICAgcHd2LmFwcGVuZChmcnMrJ0AxMjM0JykNCiAgICAgICAgICAgICAgICAgICAgcHd2LmFwcGVuZChmcnMrJ0AxMjM0NScpDQogICAgICAgICAgICAgICAgICAgIHB3di5hcHBlbmQoZnJzKydAMTIzNDU2JykNCiAgICAgICAgICAgICAgICAgICAgcHd2LmFwcGVuZChmcnMrJ0AnKQ0KICAgICAgICAgICAgICAgICAgICBwd3YuYXBwZW5kKGZycysnQEAnKQ0KICAgICAgICAgICAgICAgICAgICBwd3YuYXBwZW5kKGZycysnQEBAJykNCiAgICAgICAgICAgICAgICAgICAgcHd2LmFwcGVuZChmcnMrJ0BAQEAnKQ0KICAgICAgICAgICAgICAgICAgICBwd3YuYXBwZW5kKGZycysnQCMnKQ0KICAgICAgICAgICAgICAgICAgICBwd3YuYXBwZW5kKGZycysnMTEyMicpDQogICAgICAgICAgICAgICAgICAgIHB3di5hcHBlbmQoZnJzKycxMScpDQogICAgICAgICAgICAgICAgICAgIHB3di5hcHBlbmQoZnJzKycxMTEnKQ0KICAgICAgICAgICAgZWxzZToNCiAgICAgICAgICAgICAgICBpZiBsZW4oZnJzKTwzOg0KICAgICAgICAgICAgICAgICAgICBwd3YuYXBwZW5kKG5tZikNCiAgICAgICAgICAgICAgICBlbHNlOg0KICAgICAgICAgICAgICAgICAgICBwd3YuYXBwZW5kKGZycysnMTInKQ0KICAgICAgICAgICAgICAgICAgICBwd3YuYXBwZW5kKGZycysnMTIzJykNCiAgICAgICAgICAgICAgICAgICAgcHd2LmFwcGVuZChmcnMrJzEyMzQnKQ0KICAgICAgICAgICAgICAgICAgICBwd3YuYXBwZW5kKGZycysnMTIzNDUnKQ0KICAgICAgICAgICAgICAgICAgICBwd3YuYXBwZW5kKGZycysnMTIzNDU2JykNCiAgICAgICAgICAgICAgICAgICAgcHd2LmFwcGVuZChubWYpDQogICAgICAgICAgICAgICAgICAgIHB3di5hcHBlbmQoJzU3MjczMjAwJykNCiAgICAgICAgICAgICAgICAgICAgcHd2LmFwcGVuZChmcnMrJ0AxMjMnKQ0KICAgICAgICAgICAgICAgICAgICBwd3YuYXBwZW5kKGZycysnQDEyMzQnKQ0KICAgICAgICAgICAgICAgICAgICBwd3YuYXBwZW5kKGZycysnQDEyMzQ1JykNCiAgICAgICAgICAgICAgICAgICAgcHd2LmFwcGVuZChmcnMrJ0AxMjM0NTYnKQ0KICAgICAgICAgICAgICAgICAgICBwd3YuYXBwZW5kKGZycysnQCcpDQogICAgICAgICAgICAgICAgICAgIHB3di5hcHBlbmQoZnJzKydAQCcpDQogICAgICAgICAgICAgICAgICAgIHB3di5hcHBlbmQoZnJzKydAQEAnKQ0KICAgICAgICAgICAgICAgICAgICBwd3YuYXBwZW5kKGZycysnQEBAQCcpDQogICAgICAgICAgICAgICAgICAgIHB3di5hcHBlbmQoZnJzKydAIycpDQogICAgICAgICAgICAgICAgICAgIHB3di5hcHBlbmQoZnJzKycxMTIyJykNCiAgICAgICAgICAgICAgICAgICAgcHd2LmFwcGVuZChmcnMrJzExJykNCiAgICAgICAgICAgICAgICAgICAgcHd2LmFwcGVuZChmcnMrJzExMScpDQogICAgICAgICAgICBpZiAneWEnIGluIHB3cGx1c3M6DQogICAgICAgICAgICAgICAgZm9yIHhwd2QgaW4gcHdueWE6DQogICAgICAgICAgICAgICAgICAgIHB3di5hcHBlbmQoeHB3ZCkNCiAgICAgICAgICAgIGVsc2U6cGFzcw0KICAgICAgICAgICAgaWYgJ21vYmlsZScgaW4gbWV0aG9kOg0KICAgICAgICAgICAgICAgIHBvb2wuc3VibWl0KGNyYWNrLGlkZixwd3YpDQogICAgICAgICAgICBlbGlmICdmcmVlJyBpbiBtZXRob2Q6DQogICAgICAgICAgICAgICAgcG9vbC5zdWJtaXQoY3JhY2tmcmVlLGlkZixwd3YpDQogICAgICAgICAgICBlbGlmICd0b3VjaCcgaW4gbWV0aG9kOg0KICAgICAgICAgICAgICAgIHBvb2wuc3VibWl0KGNyYWNrZnJlZSxpZGYscHd2KQ0KICAgICAgICAgICAgZWxpZiAnbWJhc2ljJyBpbiBtZXRob2Q6DQogICAgICAgICAgICAgICAgcG9vbC5zdWJtaXQoY3JhY2tmcmVlLGlkZixwd3YpDQogICAgICAgICAgICBlbHNlOg0KICAgICAgICAgICAgICAgIHBvb2wuc3VibWl0KGNyYWNrZnJlZSxpZGYscHd2KQ0KICAgIHByaW50KCdcblwwMzNbMTszN209PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PScpDQogICAgcHJpbnQoJ1wwMzNbOTc7MW1bXDAzM1s5MjsxbStcMDMzWzk3OzFtXSBDTE9OSU5HIENPTVBMRVRFIFRJTUUgOlwwMzNbMTs5Mm0nK3RpbWUuc3RyZnRpbWUoIiVIOiVNIikrIiAiKyB0YWcpDQogICAgcHJpbnQoJ1wwMzNbOTc7MW1bXDAzM1s5MjsxbeKAolwwMzNbOTc7MW1dIE9LIDpcMDMzWzA7OTJtICVzICclKG9rKSkNCiAgICBwcmludCgnXDAzM1s5NzsxbVtcMDMzWzkyOzFtK1wwMzNbOTc7MW1dIENQIDpcMDMzWzA7OTNtICVzICclKGNwKSkNCiAgICBwcmludCgnXG5cMDMzWzE7MzdtPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0nKQ0KICAgIHdvaSA9IGlucHV0KCdcMDMzWzk3OzFtW1wwMzNbOTI7MW0rXDAzM1s5NzsxbV0gXDAzM1sxOzM3bSBFTlRFUiBUTyBCQUNLJykNCiAgICBvcy5zeXN0ZW0oInB5dGhvbiBub25vLnB5IikNCiAgICBleGl0KCkNCiANCiPilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIBbIE1FVE9ERS1NLmZhY2Vib29rIF3ilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIAjDQogDQpkZWYgY3JhY2soaWRmLHB3dik6DQogICAgZ2xvYmFsIGxvb3Asb2ssY3ANCiAgICBibyA9IHJhbmRvbS5jaG9pY2UoW20sayxoLGIsdSx4XSkNCiAgICBzeXMuc3Rkb3V0LndyaXRlKGYiXHJcMDMzWzEwMDs5Mm17Ym99W0FTSUY84oCiPk0xXXtQfSBbe0h9e2xvb3B9e1B9XT5+PFt7SH17bGVuKGlkKX17UH1dIFt7SH1PS3tib33igKJ7SH17b2t9e1B9XSBbe1B9eyd7Oi4wJX0nLmZvcm1hdChsb29wL2Zsb2F0KGxlbihpZCkpKX17UH1dXDAzM1swOzM3bSAiKSwNCiAgICBzeXMuc3Rkb3V0LmZsdXNoKCkNCiAgICB1YSA9IHJhbmRvbS5jaG9pY2UodWdlbikNCiAgICB1YTIgPSByYW5kb20uY2hvaWNlKHVnZW4yKQ0KICAgIHNlcyA9IHJlcXVlc3RzLlNlc3Npb24oKQ0KICAgIGZvciBwdyBpbiBwd3Y6DQogICAgICAgIHRyeToNCiAgICAgICAgICAgIG5pcD1yYW5kb20uY2hvaWNlKHByb3gpDQogICAgICAgICAgICBwcm94cz0geydodHRwJzogJ3NvY2tzNDovLycrbmlwfQ0KICAgICAgICAgICAgc2VzLmhlYWRlcnMudXBkYXRlKHsiSG9zdCI6J20uZmFjZWJvb2suY29tJywidXBncmFkZS1pbnNlY3VyZS1yZXF1ZXN0cyI6IjEiLCJ1c2VyLWFnZW50Ijp1YTIsImFjY2VwdCI6InRleHQvaHRtbCxhcHBsaWNhdGlvbi94aHRtbCt4bWwsYXBwbGljYXRpb24veG1sO3E9MC45LGltYWdlL2F2aWYsaW1hZ2Uvd2VicCxpbWFnZS9hcG5nLCpbaW5zZXJ0ZWQgYnkgY3l0aG9uIHRvIGF2b2lkIGNvbW1lbnQgY2xvc2VyXS9baW5zZXJ0ZWQgYnkgY3l0aG9uIHRvIGF2b2lkIGNvbW1lbnQgc3RhcnRdKjtxPTAuOCxhcHBsaWNhdGlvbi9zaWduZWQtZXhjaGFuZ2U7dj1iMztxPTAuOSIsImRudCI6IjEiLCJ4LXJlcXVlc3RlZC13aXRoIjoibWFyay52aWEuZ3AiLCJzZWMtZmV0Y2gtc2l0ZSI6InNhbWUtb3JpZ2luIiwic2VjLWZldGNoLW1vZGUiOiJjb3JzIiwic2VjLWZldGNoLXVzZXIiOiJlbXB0eSIsInNlYy1mZXRjaC1kZXN0IjoiZG9jdW1lbnQiLCJyZWZlcmVyIjoiaHR0cHM6Ly9tLmZhY2Vib29rLmNvbS8iLCJhY2NlcHQtZW5jb2RpbmciOiJnemlwLCBkZWZsYXRlIGJyIiwiYWNjZXB0LWxhbmd1YWdlIjoiZW4tR0IsZW4tVVM7cT0wLjksZW47cT0wLjgifSkNCiAgICAgICAgICAgIHAgPSBzZXMuZ2V0KCdodHRwczovL20uZmFjZWJvb2suY29tL2xvZ2luL2RldmljZS1iYXNlZC9wYXNzd29yZC8/dWlkPScraWRmKycmZmxvdz1sb2dpbl9ub19waW4mcmVmc3JjPWRlcHJlY2F0ZWQmX3JkcicpDQogICAgICAgICAgICBkYXRhYSA9eyJsc2QiOnJlLnNlYXJjaCgnbmFtZT0ibHNkIiB2YWx1ZT0iKC4qPykiJywgc3RyKHAudGV4dCkpLmdyb3VwKDEpLCJqYXpvZXN0IjpyZS5zZWFyY2goJ25hbWU9Imphem9lc3QiIHZhbHVlPSIoLio/KSInLCBzdHIocC50ZXh0KSkuZ3JvdXAoMSksInVpZCI6aWRmLCJuZXh0IjoiaHR0cHM6Ly9wLmZhY2Vib29rLmNvbS9sb2dpbi9zYXZlLWRldmljZS8iLCJmbG93IjoibG9naW5fbm9fcGluIiwicGFzcyI6cHcsfQ0KICAgICAgICAgICAga29raSA9ICgiOyIpLmpvaW4oWyAiJXM9JXMiICUgKGtleSwgdmFsdWUpIGZvciBrZXksIHZhbHVlIGluIHAuY29va2llcy5nZXRfZGljdCgpLml0ZW1zKCkgXSkNCiAgICAgICAgICAgIGtva2krPScgbV9waXhlbF9yYXRpbz0yLjYyNTsgd2Q9NDEyeDc1NicNCiAgICAgICAgICAgIGhlYWRlID0geydIb3N0JzogJ20uZmFjZWJvb2suY29tJywgJ3ZpZXdwb3J0LXdpZHRoJzogJzk4MCcsICdzZWMtY2gtdWEnOiAnIiBOb3QgQTtCcmFuZCI7dj0iOCIsICJDaHJvbWl1bSI7dj0iMTIwIiwgIkdvb2dsZSBDaHJvbWUiO3Y9IjEyMCInLCAnc2VjLWNoLXVhLW1vYmlsZSc6ICc/MScsICdzZWMtY2gtdWEtcGxhdGZvcm0nOiciV2luZG93cyInLCAnc2VjLWNoLXByZWZlcnMtY29sb3Itc2NoZW1lJzogJ2xpZ2h0JywgJ2RudCc6ICcxJywgJ3VwZ3JhZGUtaW5zZWN1cmUtcmVxdWVzdHMnOiAnMScsICd1c2VyLWFnZW50Jzp1YSwnYWNjZXB0JzogJ3RleHQvaHRtbCxhcHBsaWNhdGlvbi94aHRtbCt4bWwsYXBwbGljYXRpb24veG1sO3E9MC45LGltYWdlL2F2aWYsaW1hZ2Uvd2VicCxpbWFnZS9hcG5nLCovKjtxPTAuOCxhcHBsaWNhdGlvbi9zaWduZWQtZXhjaGFuZ2U7dj1iMztxPTAuNycsICdzZWMtZmV0Y2gtc2l0ZSc6ICdub25lJywgJ3NlYy1mZXRjaC1tb2RlJzogJ25hdmlnYXRlJywgJ3NlYy1mZXRjaC11c2VyJzogJz8xJywgJ3NlYy1mZXRjaC1kZXN0JzogJ2RvY3VtZW50JywgJ2FjY2VwdC1lbmNvZGluZyc6ICdnemlwLCBkZWZsYXRlLCBicicsICdhY2NlcHQtbGFuZ3VhZ2UnOiAnZW4tVVMsZW47cT0wLjknfQ0KICAgICAgICAgICAgcG8gPSBzZXMucG9zdCgnaHR0cHM6Ly9tLmZhY2Vib29rLmNvbS9sb2dpbi9kZXZpY2UtYmFzZWQvdmFsaWRhdGUtcGFzc3dvcmQvP3NoYmw9MCcsZGF0YT1kYXRhYSxjb29raWVzPXsnY29va2llJzoga29raX0saGVhZGVycz1oZWFkZSxhbGxvd19yZWRpcmVjdHM9RmFsc2UpDQogICAgICAgICAgICBpZiAiY2hlY2twb2ludCIgaW4gcG8uY29va2llcy5nZXRfZGljdCgpLmtleXMoKToNCiAgICAgICAgICAgICAgICBwcmludChmJ1xyXDAzM1swOzk1bVt7dGltZS5zdHJmdGltZSgiJUg6JU0iKX3igKJBU0lGLUNwXSB7aWRmfSDigKIge3B3fScpDQogICAgICAgICAgICAgICAgb3Muc3lzdGVtKCdlc3BlYWsgLWEgMzAwICIgQ3AsIicpDQogICAgICAgICAgICAgICAgb3BlbignQ1AvJytjcGMsJ2EnKS53cml0ZShpZGYrJyDigKIgJytwdysnXG4nKQ0KICAgICAgICAgICAgICAgIGFrdW4uYXBwZW5kKGlkZisnIOKAoiAnK3B3KQ0KICAgICAgICAgICAgICAgIGNwKz0xDQogICAgICAgICAgICAgICAgYnJlYWsNCiAgICAgICAgICAgIGVsaWYgImNfdXNlciIgaW4gc2VzLmNvb2tpZXMuZ2V0X2RpY3QoKS5rZXlzKCk6DQogICAgICAgICAgICAgICAgb2srPTENCiAgICAgICAgICAgICAgICBjb2tpPXBvLmNvb2tpZXMuZ2V0X2RpY3QoKQ0KICAgICAgICAgICAgICAgIGt1a2kgPSAoIjsiKS5qb2luKFsgIiVzPSVzIiAlIChrZXksIHZhbHVlKSBmb3Iga2V5LCB2YWx1ZSBpbiBzZXMuY29va2llcy5nZXRfZGljdCgpLml0ZW1zKCkgXSkNCiAgICAgICAgICAgICAgICBwcmludChmJ1xyXHgxYlsxOzk2bVtBU0lGLU9L8J+WpF0ge2lkZn0g4oCiIHtwd31cblwwMzNbMDs5M21b4p2k77iPXSBDT09LSUVTIOKAoiBcMDMzWzE7OTJte2t1a2l9ICcpDQogICAgICAgICAgICAgICAgb3BlbignT0svJytva2MsJ2EnKS53cml0ZShpZGYrJyDigKIgJytwdysnXG4nKQ0KICAgICAgICAgICAgICAgIGJyZWFrDQogICAgICAgICAgICAgICAgDQogICAgICAgICAgICBlbHNlOg0KICAgICAgICAgICAgICAgIGNvbnRpbnVlDQogICAgICAgIGV4Y2VwdCByZXF1ZXN0cy5leGNlcHRpb25zLkNvbm5lY3Rpb25FcnJvcjoNCiAgICAgICAgICAgIHRpbWUuc2xlZXAoMzEpDQogICAgbG9vcCs9MQ0KIA0KI+KUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgFsgTUVUSE9ERS1NQkFTSUMtMiBd4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSAIw0KIA0KZGVmIGNyYWNrZnJlZShpZGYscHd2KToNCiAgICBnbG9iYWwgbG9vcCxvayxjcA0KICAgIHN5cy5zdGRvdXQud3JpdGUoZiJccntIfVtBU0lGLU0yXXtQfSBbe0h9e2xvb3B9e1B9XXtQfT5+PFt7SH17bGVuKGlkKX17UH1dLVtPS3tQfeKAontIfXtva317UH1dIFt7UH17J3s6LjAlfScuZm9ybWF0KGxvb3AvZmxvYXQobGVuKGlkKSkpfXtQfV0gICIpLA0KICAgIHN5cy5zdGRvdXQuZmx1c2goKQ0KICAgIHVhID0gcmFuZG9tLmNob2ljZSh1Z2VuKQ0KICAgIHVhMiA9IHJhbmRvbS5jaG9pY2UodWdlbjIpDQogICAgc2VzID0gcmVxdWVzdHMuU2Vzc2lvbigpDQogICAgZm9yIHB3IGluIHB3djoNCiAgICAgICAgdHJ5Og0KICAgICAgICAgICAgbmlwPXJhbmRvbS5jaG9pY2UocHJveCkNCiAgICAgICAgICAgIHByb3hzPSB7J2h0dHAnOiAnc29ja3M0Oi8vJytuaXB9DQogICAgICAgICAgICBzZXMuaGVhZGVycy51cGRhdGUoeyJIb3N0IjonbS5mYWNlYm9vay5jb20nLCJ1cGdyYWRlLWluc2VjdXJlLXJlcXVlc3RzIjoiMSIsInVzZXItYWdlbnQiOnVhMiwiYWNjZXB0IjoidGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2UvYXZpZixpbWFnZS93ZWJwLGltYWdlL2FwbmcsKltpbnNlcnRlZCBieSBjeXRob24gdG8gYXZvaWQgY29tbWVudCBjbG9zZXJdL1tpbnNlcnRlZCBieSBjeXRob24gdG8gYXZvaWQgY29tbWVudCBzdGFydF0qO3E9MC44LGFwcGxpY2F0aW9uL3NpZ25lZC1leGNoYW5nZTt2PWIzO3E9MC45IiwiZG50IjoiMSIsIngtcmVxdWVzdGVkLXdpdGgiOiJtYXJrLnZpYS5ncCIsInNlYy1mZXRjaC1zaXRlIjoic2FtZS1vcmlnaW4iLCJzZWMtZmV0Y2gtbW9kZSI6ImNvcnMiLCJzZWMtZmV0Y2gtdXNlciI6ImVtcHR5Iiwic2VjLWZldGNoLWRlc3QiOiJkb2N1bWVudCIsInJlZmVyZXIiOiJodHRwczovL20uZmFjZWJvb2suY29tLyIsImFjY2VwdC1lbmNvZGluZyI6Imd6aXAsIGRlZmxhdGUgYnIiLCJhY2NlcHQtbGFuZ3VhZ2UiOiJlbi1HQixlbi1VUztxPTAuOSxlbjtxPTAuOCJ9KQ0KICAgICAgICAgICAgcCA9IHNlcy5nZXQoJ2h0dHBzOi8vbS5mYWNlYm9vay5jb20vbG9naW4vZGV2aWNlLWJhc2VkL3Bhc3N3b3JkLz91aWQ9JytpZGYrJyZmbG93PWxvZ2luX25vX3BpbiZyZWZzcmM9ZGVwcmVjYXRlZCZfcmRyJykNCiAgICAgICAgICAgIGRhdGFhID17ImxzZCI6cmUuc2VhcmNoKCduYW1lPSJsc2QiIHZhbHVlPSIoLio/KSInLCBzdHIocC50ZXh0KSkuZ3JvdXAoMSksImphem9lc3QiOnJlLnNlYXJjaCgnbmFtZT0iamF6b2VzdCIgdmFsdWU9IiguKj8pIicsIHN0cihwLnRleHQpKS5ncm91cCgxKSwidWlkIjppZGYsIm5leHQiOiJodHRwczovL3AuZmFjZWJvb2suY29tL2xvZ2luL3NhdmUtZGV2aWNlLyIsImZsb3ciOiJsb2dpbl9ub19waW4iLCJwYXNzIjpwdyx9DQogICAgICAgICAgICBrb2tpID0gKCI7Iikuam9pbihbICIlcz0lcyIgJSAoa2V5LCB2YWx1ZSkgZm9yIGtleSwgdmFsdWUgaW4gcC5jb29raWVzLmdldF9kaWN0KCkuaXRlbXMoKSBdKQ0KICAgICAgICAgICAga29raSs9JyBtX3BpeGVsX3JhdGlvPTIuNjI1OyB3ZD00MTJ4NzU2Jw0KICAgICAgICAgICAgaGVhZGUgPSB7J0hvc3QnOiAncC5mYWNlYm9vay5jb20nLCAndmlld3BvcnQtd2lkdGgnOiAnOTgwJywgJ3NlYy1jaC11YSc6ICciIE5vdCBBO0JyYW5kIjt2PSI4IiwgIkNocm9taXVtIjt2PSIxMjAiLCAiR29vZ2xlIENocm9tZSI7dj0iMTE2IicsICdzZWMtY2gtdWEtbW9iaWxlJzogJz8xJywgJ3NlYy1jaC11YS1wbGF0Zm9ybSc6JyJXaW5kb3dzIicsICdzZWMtY2gtcHJlZmVycy1jb2xvci1zY2hlbWUnOiAnbGlnaHQnLCAnZG50JzogJzEnLCAndXBncmFkZS1pbnNlY3VyZS1yZXF1ZXN0cyc6ICcxJywgJ3VzZXItYWdlbnQnOnVhLCdhY2NlcHQnOiAndGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2UvYXZpZixpbWFnZS93ZWJwLGltYWdlL2FwbmcsKi8qO3E9MC44LGFwcGxpY2F0aW9uL3NpZ25lZC1leGNoYW5nZTt2PWIzO3E9MC43JywgJ3NlYy1mZXRjaC1zaXRlJzogJ25vbmUnLCAnc2VjLWZldGNoLW1vZGUnOiAnbmF2aWdhdGUnLCAnc2VjLWZldGNoLXVzZXInOiAnPzEnLCAnc2VjLWZldGNoLWRlc3QnOiAnZG9jdW1lbnQnLCAnYWNjZXB0LWVuY29kaW5nJzogJ2d6aXAsIGRlZmxhdGUsIGJyJywgJ2FjY2VwdC1sYW5ndWFnZSc6ICdlbi1VUyxlbjtxPTAuOSd9DQogICAgICAgICAgICBwbyA9IHNlcy5wb3N0KCdodHRwczovL20uZmFjZWJvb2suY29tL2xvZ2luL2RldmljZS1iYXNlZC92YWxpZGF0ZS1wYXNzd29yZC8/c2hibD0wJyxkYXRhPWRhdGFhLGNvb2tpZXM9eydjb29raWUnOiBrb2tpfSxoZWFkZXJzPWhlYWRlLGFsbG93X3JlZGlyZWN0cz1GYWxzZSkNCiAgICAgICAgICAgIGlmICJjaGVja3BvaW50IiBpbiBwby5jb29raWVzLmdldF9kaWN0KCkua2V5cygpOg0KICAgICAgICAgICAgICAgIHByaW50KGYnXHJcMDMzWzA7OTVtW3t0aW1lLnN0cmZ0aW1lKCIlSDolTSIpfeKAokFTSUYtQ3BdIHtpZGZ9IOKAoiB7cHd9JykNCiAgICAgICAgICAgICAgICBvcy5zeXN0ZW0oJ2VzcGVhayAtYSAzMDAgIiBDcCwiJykNCiAgICAgICAgICAgICAgICBvcGVuKCdDUC8nK2NwYywnYScpLndyaXRlKGlkZisnIOKAoiAnK3B3KydcbicpDQogICAgICAgICAgICAgICAgYWt1bi5hcHBlbmQoaWRmKycg4oCiICcrcHcpDQogICAgICAgICAgICAgICAgY3ArPTENCiAgICAgICAgICAgICAgICBicmVhaw0KICAgICAgICAgICAgZWxpZiAiY191c2VyIiBpbiBzZXMuY29va2llcy5nZXRfZGljdCgpLmtleXMoKToNCiAgICAgICAgICAgICAgICBvays9MQ0KICAgICAgICAgICAgICAgIGNva2k9cG8uY29va2llcy5nZXRfZGljdCgpDQogICAgICAgICAgICAgICAga3VraSA9ICgiOyIpLmpvaW4oWyAiJXM9JXMiICUgKGtleSwgdmFsdWUpIGZvciBrZXksIHZhbHVlIGluIHNlcy5jb29raWVzLmdldF9kaWN0KCkuaXRlbXMoKSBdKQ0KICAgICAgICAgICAgICAgIHByaW50KGYnXHJcMDMzWzA7OTJtW0FTSUYtT2vwn5KaXSB7aWRmfSDigKIge3B3fVxuXDAzM1swOzkzbVvwn4y6XT0gQ09PS0lFUyDigKIgXDAzM1swOzkybXtrdWtpfSAnKQ0KICAgICAgICAgICAgICAgIG9zLnN5c3RlbSgnZXNwZWFrIC1hIDMwMCAiIE9rLCAgQVNJRiwgIGlkIicpDQogICAgICAgICAgICAgICAgb3BlbignT0svJytva2MsJ2EnKS53cml0ZShpZGYrJyDigKIgJytwdysnXG4nKQ0KICAgICAgICAgICAgICAgIGJyZWFrDQogICAgICAgICAgICAgICAgDQogICAgICAgICAgICBlbHNlOg0KICAgICAgICAgICAgICAgIGNvbnRpbnVlDQogICAgICAgIGV4Y2VwdCByZXF1ZXN0cy5leGNlcHRpb25zLkNvbm5lY3Rpb25FcnJvcjoNCiAgICAgICAgICAgIHRpbWUuc2xlZXAoMzEpDQogICAgbG9vcCs9MQ0KIA0KIy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tWyBTWVNURU0tQ09OVFJPTCBdLS0tLS0tLS0tLS0tLS0tLS0tLS0jDQogDQppZiBfX25hbWVfXz09J19fbWFpbl9fJzoNCiAgICB0cnk6b3MubWtkaXIoJ09LJykNCiAgICBleGNlcHQ6cGFzcw0KICAgIHRyeTpvcy5ta2RpcignQ1AnKQ0KICAgIGV4Y2VwdDpwYXNzDQogICAgdHJ5Om9zLnN5c3RlbSgndG91Y2ggLnByb3gudHh0JykNCiAgICBleGNlcHQ6cGFzcw0KbWVudSgp'))